syntax = "proto3";

// export PATH="$PATH:$(go env GOPATH)/bin"
// protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative grpc.proto

option go_package = "github.com/secondsightsolutions/binary-v5/main";

package main;

message Scrub {
    int64  seq  = 1;
    string auth = 2;
    string manu = 3;
    string plcy = 4;
    string name = 5;
    string vers = 6;
    string desc = 7;
    string hash = 8;
    string host = 9;
    string appl = 10;
    string hdrs = 11;
    string cmdl = 12;
    string kind = 13;
    string test = 14;
    int64  scid = 15;
    string col1 = 21;
    string col2 = 22;
    string col3 = 23;
    string col4 = 24;
    string col5 = 25;
    string col6 = 26;
    string col7 = 27;
    string col8 = 28;
    string col9 = 29;
    string col10= 30;
    string col11= 31;
    string col12= 32;
    string col13= 33;
    string col14= 34;
    string col15= 35;
    string col16= 36;
    string col17= 37;
    string col18= 38;
    string col19= 39;
    string col20= 40;
    string col21= 41;
    string col22= 42;
    string col23= 43;
    string col24= 44;
    string col25= 45;
    string col26= 46;
    string col27= 47;
    string col28= 48;
    string col29= 49;
    string col30= 50;
    string col31= 51;
    string col32= 52;
    string col33= 53;
    string col34= 54;
    string col35= 55;
    string col36= 56;
    string col37= 57;
    string col38= 58;
    string col39= 59;
    string col40= 60;
    string col41= 61;
    string col42= 62;
    string col43= 63;
    string col44= 64;
    string col45= 65;
    string col46= 66;
    string col47= 67;
    string col48= 68;
    string col49= 69;
    string col50= 70;
    map<string,string> data = 71;
}
message Rebate {
    int64  seq  = 1;    // sync sequence number
    int64  scid = 2;    // scrub id
    int64  rbid = 3;    // rebate id - generated row number
    int64  indx = 4;    // index - sort order
    string rxn  = 5;
    string hrxn = 6;
    string ndc  = 7;
    string spid = 8;    // service provider id
    string prid = 9;    // prescriber provider id
    string dos  = 10;   // date of service
    string stat = 11;
    string excl = 12;
    string errc = 13;
    string errm = 14;
    string spmt = 15;   // service provider match type: exact, xwalk, stack, chain
    string fspd = 16;   // formatted spid
    string fndc = 17;   // formatted ndc
    string frxn = 18;   // formatted rxn
    string fprd = 19;   // formatted prid
    string col1 = 21;
    string col2 = 22;
    string col3 = 23;
    string col4 = 24;
    string col5 = 25;
    string col6 = 26;
    string col7 = 27;
    string col8 = 28;
    string col9 = 29;
    string col10= 30;
    string col11= 31;
    string col12= 32;
    string col13= 33;
    string col14= 34;
    string col15= 35;
    string col16= 36;
    string col17= 37;
    string col18= 38;
    string col19= 39;
    string col20= 40;
    string col21= 41;
    string col22= 42;
    string col23= 43;
    string col24= 44;
    string col25= 45;
    string col26= 46;
    string col27= 47;
    string col28= 48;
    string col29= 49;
    string col30= 50;
    string col31= 51;
    string col32= 52;
    string col33= 53;
    string col34= 54;
    string col35= 55;
    string col36= 56;
    string col37= 57;
    string col38= 58;
    string col39= 59;
    string col40= 60;
    string col41= 61;
    string col42= 62;
    string col43= 63;
    string col44= 64;
    string col45= 65;
    string col46= 66;
    string col47= 67;
    string col48= 68;
    string col49= 69;
    string col50= 70;
}
message ClaimUse {
    int64  seq  = 1;
    int64  scid = 2;
    string shrt = 3;
    string excl = 4;
}
message RebateClaim {
    int64  seq  = 1;
    int64  scid = 2;
    int64  rbid = 3;
    string shrt = 4;
}
message RebateMeta {
    int64  seq  = 1;
    int64  scid = 2;
    string col1 = 21;
    string col2 = 22;
    string col50= 70;
}

message Claim {
    int64  seq  = 1;
    string shrt = 2;
    string i340 = 3;
    string ndc  = 4;
    string spid = 5;
    string prid = 6;
    string hrxn = 7;
    string hfrx = 8;
    string hdos = 9;
    string hdop = 10;
    int64  doc  = 11;
    int64  dos  = 12;
    int64  dop  = 13;
    string netw = 14;
    string prnm = 15;
    string chnm = 16;
    bool   elig = 17;
    bool   susp = 18;
    bool   cnfm = 19;
    string manu = 20;
    float  qty  = 21;
    repeated string ihph = 30;
}

message TitanRebate {
    string manu = 1;
    int64  scid = 2;
    int64  rbid = 3;
    string stat = 4;
    string errc = 5;
    string errm = 6;
}

message Entity {
    string i340  = 1;
    int64  strt  = 2;
    int64  term  = 3;
    string state = 4;

    repeated Designation desigs = 10;
}
message Pharmacy {
    string i340 = 1;
    string phid = 2;
    string ncp  = 3;
    string npi  = 4;
    string dea  = 5;
    string chnm = 6;
    string state = 10;
    repeated string ncps = 7;
    repeated string npis = 8;
    repeated string deas = 9;
}
message NDC {
    string ndc  = 1;
    string name = 2;
    string netw = 3;
}
message SPI {
    string ncp = 1;
    string npi = 2;
    string dea = 3;
    string sto = 4;
    string nam = 5;
    string lbn = 6;
    string chn = 7;
    string cde = 8;   // NCPDP 340b status code
}
message Designation {
    string manu = 1;
    string i340 = 2;
    string netw = 3;
    string flag = 4;
    string phid = 5;
    bool   assg = 6;
    bool   term = 7;
    int64  xdat = 8;   // expired_at
    int64  dlat = 9;
    int64  xsat = 10;  // expires_at
    int64  crat = 12;  // created_at
    int64  cpat = 13;
    bool   excl = 14;
    string hin  = 15;

    map<string,string> xtra = 11;
}
message LDN {
    string manu = 1;
    string netw = 2;
    string phid = 3;
    bool   assg = 4;
    bool   term = 5;

    map<string,string> xtra = 10;
}
message ESP1PharmNDC {
    string  spid  = 1;
    string  ndc   = 2;
    int64   strt  = 3;
    int64   term  = 4;
}
message Eligibility {
    int64  id   = 1;     // id
    string i340   = 2;   // id_340b
    string phid   = 3;   // pharmacy_id
    string manu   = 4;   // manufacturer
    string netw   = 5;   // network
    int64  strt   = 6;   // start_at
    int64  term   = 7;   // end_at
}

message Auth {
    string manu = 1;
    string proc = 2;
    string auth = 3;
    string kind = 4;
    int64  vers = 5;
    bool   enb  = 6;
}

message Req {
}
message Res {
}
message SyncReq {
    int64  last = 1;
}

message Metrics {
    int32   rbt_total     = 1;
    int32   rbt_valid     = 2;
    int32   rbt_matched   = 3;
    int32   rbt_nomatch   = 4;
    int32   rbt_invalid   = 5;
    int32   rbt_passed    = 6;
    int32   rbt_failed    = 7;
    int32   clm_total     = 8;
    int32   clm_valid     = 9;
    int32   clm_matched   = 10;
    int32   clm_nomatch   = 11;
    int32   clm_invalid   = 12;
    int32   spi_exact     = 13;
    int32   spi_cross     = 14;
    int32   spi_stack     = 15;
    int32   spi_chain     = 16;
    int32   dos_equ_doc   = 17;
    int32   dos_bef_doc   = 18;
    int32   dos_aft_doc   = 19;
    int32   dos_equ_dof   = 20;
    int32   dos_bef_dof   = 21;
    int32   dos_aft_dof   = 22;
}

service Atlas {
    rpc Ping(Req)                           returns (Res) {}
    rpc Rebates(stream Rebate)              returns (stream Rebate) {}
}

service Titan {
    rpc Ping(Req)                           returns (Res) {}
    rpc GetClaims(SyncReq)                  returns (stream Claim) {}
    rpc GetSPIs(SyncReq)                    returns (stream SPI) {}
    rpc GetNDCs(SyncReq)                    returns (stream NDC) {}
    rpc GetEntities(SyncReq)                returns (stream Entity) {}
    rpc GetPharmacies(SyncReq)              returns (stream Pharmacy) {}
    rpc GetESP1Pharms(SyncReq)              returns (stream ESP1PharmNDC) {}
    rpc GetEligibilityLedger(SyncReq)       returns (stream Eligibility) {}
    rpc GetAuths(SyncReq)                   returns (stream Auth) {}

    rpc Scrubs(stream Scrub)                returns (Res) {}
    rpc Rebates(stream TitanRebate)         returns (Res) {}
    rpc ClaimsUsed(stream ClaimUse)         returns (Res) {}
    rpc RebateClaims(stream RebateClaim)    returns (Res) {}
    rpc RebateMetas(stream RebateMeta)      returns (Res) {}
}