syntax = "proto3";

// export PATH="$PATH:$(go env GOPATH)/bin"
// protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative grpc.proto

option go_package = "github.com/secondsightsolutions/binary-v5/main";

package main;

message Rebate {
    int64  ivid = 1;    // invoice id
    int64  rbid = 2;    // rebate id - generated row number
    int64  indx = 3;    // index - sort order
    string rxn  = 4;
    string hrxn = 5;
    string ndc  = 6;
    string spid = 7;    // service provider id
    string prid = 8;    // prescriber provider id
    string dos  = 9;    // date of service
    string errc = 10;
    string errm = 11;
    string stat = 12;   // rebate status
    string spmt = 13;   // service provider match type: exact, xwalk, stack, chain
    string fspd = 14;
    string fndc = 15;
    string frxn = 16;
    string fprd = 17;
    string data = 18;
}

message Scrub {
    int64  scid = 1;
    int64  ivid = 2;
    string cmid = 3;
    string plcy = 4;
    string kind = 5;
    string appl = 6;
    string hdrs = 7;
    string test = 8;
    int64  seq  = 9;
}

message Claim {
    string clid = 1;
    string i340 = 2;
    string ndc  = 3;
    string spid = 4;
    string prid = 5;
    string hrxn = 6;
    string hfrx = 7;
    string hdos = 8;
    string hdop = 9;
    int64  doc  = 10;
    int64  dos  = 11;
    int64  dop  = 12;
    string netw = 13;
    string prnm = 14;
    string chnm = 15;
    bool   elig = 16;
    bool   susp = 17;
    bool   cnfm = 18;
    float  qty  = 19;
    string ihph = 20;
    string manu = 21;
    int64  seq  = 22;
}

message ScrubRebate {
    int64  scid = 1;
    int64  ivid = 2;
    int64  rbid = 3;
    int64  indx = 4;
    string stat = 5;
    string excl = 6;
    string spmt = 7;   // service provider match type: exact, xwalk, stack, chain
    int64  seq  = 8;
}

message ScrubClaim {
    int64  scid = 1;
    string clid = 2;
    string excl = 3;
    int64  seq  = 4;
}

message RebateResult {
    int64  rbid = 1;    // rebate id - generated row number
    int64  indx = 2;    // index - sort order
    string rxn  = 3;
    string hrxn = 4;
    string ndc  = 5;
    string spid = 6;    // service provider id
    string prid = 7;    // prescriber provider id
    string dos  = 8;   // date of service
    string stat = 9;
    string excl = 10;
    string spmt = 11;   // service provider match type: exact, xwalk, stack, chain
    string errc = 12;
    string errm = 13;
    string data = 14;   // comma-separated list of rebate attribute values
}

message RebateClaim {
    int64  seq  = 1;
    int64  scid = 2;
    int64  rbid = 3;
    string clid = 4;
}

message Command {
    int64 seq   = 1;
    string comd = 2;    // GRPC service API call (endpoint/function name)
    string manu = 3;
    string name = 4;
    string kind = 5;
    string auth = 6;
    string vers = 7;
    string dscr = 8;
    string hash = 9;
    string netw = 10;
    string host = 11;
    string user = 12;
    string addr = 13;   // public address seen on incoming command
    string cmdl = 14;
    string cwd  = 15;   // current working directory
    string rslt = 16;
    int64  crat = 17;
}

message Entity {
    int64  seq   = 1;
    string i340  = 2;
    int64  strt  = 3;
    int64  term  = 4;
}
message Pharmacy {
    string i340 = 1;
    string phid = 2;
    string ncp  = 3;
    string npi  = 4;
    string dea  = 5;
    string chnm = 6;
    string ncps = 8;
    string npis = 9;
    string deas = 10;
    string state = 11;
    int64  seq   = 12;
}
message NDC {
    string manu = 1;
    string ndc  = 2;
    string name = 3;
    string netw = 4;
    int64  seq  = 5;
}
message SPI {
    string ncp = 1;
    string npi = 2;
    string dea = 3;
    string sto = 4;
    string nam = 5;
    string lbn = 6;
    string chn = 7;
    string cde = 8;   // NCPDP 340b status code
    int64  seq = 9;
}
message Designation {
    string manu = 1;
    string i340 = 2;
    string netw = 3;
    string flag = 4;
    string phid = 5;
    bool   assg = 6;
    bool   term = 7;
    int64  xdat = 8;   // expired_at
    int64  dlat = 9;
    int64  xsat = 10;  // expires_at
    int64  crat = 12;  // created_at
    int64  cpat = 13;
    bool   excl = 14;
    string hin  = 15;
    int64  seq  = 16;
}
message LDN {
    string manu = 1;
    string netw = 2;
    string phid = 3;
    bool   assg = 4;
    bool   term = 5;
    int64  seq  = 6;
}
message ESP1PharmNDC {
    string  manu = 1;
    string  spid = 2;
    string  ndc  = 3;
    int64   strt = 4;
    int64   term = 5;
}
message Eligibility {
    int64  seq    = 1;   // id
    string i340   = 2;   // id_340b
    string phid   = 3;   // pharmacy_id
    string manu   = 4;   // manufacturer
    string netw   = 5;   // network
    int64  strt   = 6;   // start_at
    int64  term   = 7;   // end_at
}

message Auth {
    string manu = 1;
    string proc = 2;
    string auth = 3;
    string kind = 4;
    int64  vers = 5;
    bool   enb  = 6;
}

message Req {
}
message Res {
}
message SyncReq {
    int64  last = 1;
}
message ScrubReq {
    string manu = 1;
    int64  ivid = 2;
}

message Metrics {
    int32   rbt_total     = 1;
    int32   rbt_valid     = 2;
    int32   rbt_matched   = 3;
    int32   rbt_nomatch   = 4;
    int32   rbt_invalid   = 5;
    int32   rbt_passed    = 6;
    int32   rbt_failed    = 7;
    int32   clm_total     = 8;
    int32   clm_valid     = 9;
    int32   clm_matched   = 10;
    int32   clm_nomatch   = 11;
    int32   clm_invalid   = 12;
    int32   spi_exact     = 13;
    int32   spi_cross     = 14;
    int32   spi_stack     = 15;
    int32   spi_chain     = 16;
    int32   dos_equ_doc   = 17;
    int32   dos_bef_doc   = 18;
    int32   dos_aft_doc   = 19;
    int32   dos_equ_dof   = 20;
    int32   dos_bef_dof   = 21;
    int32   dos_aft_dof   = 22;
}
message TestData {
    repeated Claim        claims     = 1;
    repeated Entity       entities   = 2;
    repeated Pharmacy     pharmacies = 3;
    repeated NDC          ndcs       = 4;
    repeated SPI          spis       = 5;
    repeated Designation  desigs     = 6;
    repeated LDN          ldns       = 7;
    repeated ESP1PharmNDC esp1       = 8;
    repeated Eligibility  ledger     = 9;
    string name = 10;
}
service Atlas {
    rpc Ping(Req)                           returns (Res) {}
    rpc Invoice(stream Rebate)              returns (Res) {}
    rpc Scrub(ScrubReq)                     returns (stream RebateResult) {}
    rpc UploadTest(TestData)                returns (Res) {}
}

service Titan {
    rpc Ping(Req)                           returns (Res) {}
    rpc GetClaims(SyncReq)                  returns (stream Claim) {}
    rpc GetSPIs(SyncReq)                    returns (stream SPI) {}
    rpc GetNDCs(SyncReq)                    returns (stream NDC) {}
    rpc GetEntities(SyncReq)                returns (stream Entity) {}
    rpc GetPharmacies(SyncReq)              returns (stream Pharmacy) {}
    rpc GetESP1Pharms(SyncReq)              returns (stream ESP1PharmNDC) {}
    rpc GetEligibilityLedger(SyncReq)       returns (stream Eligibility) {}
    rpc GetAuths(SyncReq)                   returns (stream Auth) {}

    rpc SyncCommands(stream Command)                returns (Res) {}
    rpc SyncScrubs(stream Scrub)                    returns (Res) {}
    rpc SyncScrubRebates(stream ScrubRebate)        returns (Res) {}
    rpc SyncScrubClaims(stream ScrubClaim)          returns (Res) {}
    rpc SyncScrubRebatesClaims(stream RebateClaim)  returns (Res) {}
    
}